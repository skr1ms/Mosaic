{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/admin/admins/{id}/email": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates administrator email by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-management"
                ],
                "summary": "Update admin email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New email",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.UpdateAdminEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request or email format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/admins/{id}/password": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates administrator password by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-management"
                ],
                "summary": "Update admin password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.UpdateAdminPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request or password too short",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/coupons": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns list of all coupons with filtering capabilities by code, status, size, style and partner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-coupons"
                ],
                "summary": "Get coupons list with filtering",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by coupon code",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Partner ID for filtering",
                        "name": "partner_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status for filtering (new/used)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Size for filtering",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Style for filtering",
                        "name": "style",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page (default 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupons list",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates new coupons in batch mode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-coupons"
                ],
                "summary": "Create coupons",
                "parameters": [
                    {
                        "description": "Coupon creation parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/coupon.CreateCouponRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Coupons created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Request error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/coupons/batch-delete": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes multiple coupons by their IDs in administrative panel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-coupons"
                ],
                "summary": "Batch delete coupons for admin",
                "parameters": [
                    {
                        "description": "List of coupon IDs to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch deletion result",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Request error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/coupons/batch/reset": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Resets multiple coupons to original state through administrative panel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-coupons"
                ],
                "summary": "Batch reset coupons (admin)",
                "parameters": [
                    {
                        "description": "List of coupon IDs to reset",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/coupon.BatchResetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch reset result",
                        "schema": {
                            "$ref": "#/definitions/coupon.BatchResetResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/coupons/export-advanced": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exports coupons in various formats (TXT, CSV, XLSX) with configurable options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "admin-coupons"
                ],
                "summary": "Advanced export coupons (admin)",
                "parameters": [
                    {
                        "description": "Export options",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/coupon.ExportOptionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Export file",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/coupons/export/partner/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exports coupons of specific partner with status \"new\" in .txt or .csv format",
                "produces": [
                    "text/plain",
                    "text/csv"
                ],
                "tags": [
                    "admin-coupons"
                ],
                "summary": "Export partner coupons for admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "txt",
                        "description": "File format (txt or csv)",
                        "name": "format",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner coupons file",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid partner ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/coupons/paginated": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns list of coupons with pagination and extended filtering for administrative panel",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-coupons"
                ],
                "summary": "Get coupons list with pagination for admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default 20, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by coupon code",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "partner_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon status (new, used)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon style",
                        "name": "style",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Creation date from (RFC3339)",
                        "name": "created_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Creation date to (RFC3339)",
                        "name": "created_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Usage date from (RFC3339)",
                        "name": "used_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Usage date to (RFC3339)",
                        "name": "used_to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupons with pagination info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/coupons/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns detailed information about coupon by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-coupons"
                ],
                "summary": "Get coupon details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes coupon by ID with confirmation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-coupons"
                ],
                "summary": "Delete coupon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Delete confirmation (true/false)",
                        "name": "confirm",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID or confirmation required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/coupons/{id}/download-materials": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Downloads archive with materials of used coupon (original, preview, schema)",
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "admin-coupons"
                ],
                "summary": "Download coupon materials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ZIP archive with materials",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid coupon ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon not found or not used",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/coupons/{id}/reset": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Resets coupon to \"new\" status with removal of all activation data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-coupons"
                ],
                "summary": "Reset coupon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon reset",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns data for admin dashboard",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-dashboard"
                ],
                "summary": "Get admin dashboard",
                "responses": {
                    "200": {
                        "description": "Dashboard data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/images": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns list of all image processing tasks with filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-images"
                ],
                "summary": "Get all image processing tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by status (queued, processing, completed, failed)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by partner ID",
                        "name": "partner_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Record limit (default 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image processing tasks list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/images/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns detailed information about image processing task",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-images"
                ],
                "summary": "Get image task details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes image processing task and related files",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-images"
                ],
                "summary": "Delete image processing task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/images/{id}/retry": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Restarts failed image processing task",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-images"
                ],
                "summary": "Retry image processing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task queued for retry",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Task cannot be retried",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/main-admin/admins": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns list of all administrators in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-management"
                ],
                "summary": "Get admins list",
                "responses": {
                    "200": {
                        "description": "List of administrators",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new admin (only for existing admins)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-management"
                ],
                "summary": "Create a new admin",
                "parameters": [
                    {
                        "description": "New admin data",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.CreateAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Admin created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/main-admin/admins/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes administrator by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-management"
                ],
                "summary": "Delete admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid admin ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/next": {
            "get": {
                "description": "Returns next task in queue for processing",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-image-processing"
                ],
                "summary": "Get next task for processing",
                "responses": {
                    "200": {
                        "description": "Next task for processing",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "No tasks in queue",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to get next task",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/nginx/deploy": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Forces generation and update of nginx configuration via CI/CD pipeline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-domains"
                ],
                "summary": "Force nginx update",
                "responses": {
                    "200": {
                        "description": "Nginx configuration updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/partners": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns list of all partners with filtering, search and sorting",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-partners"
                ],
                "summary": "Get partners list with filtering and sorting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by brand name, domain or email",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status (active/blocked)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field (created_at/brand_name)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc/desc, default desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partners list",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new partner with an auto-generated code (starting from 0001, 0000 is reserved)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-partners"
                ],
                "summary": "Create a new partner",
                "parameters": [
                    {
                        "description": "New partner data",
                        "name": "partner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/partner.CreatePartnerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Partner created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Partner with this login/domain already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/partners/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns partner details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-partners"
                ],
                "summary": "Get partner details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates partner data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-partners"
                ],
                "summary": "Update partner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes partner by ID with all related data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-partners"
                ],
                "summary": "Delete partner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Delete confirmation (true/false)",
                        "name": "confirm",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID or confirmation required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/partners/{id}/block": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Blocks partner (temporarily disables access)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-partners"
                ],
                "summary": "Block partner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner blocked",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/partners/{id}/detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns detailed partner info including coupon stats, last activity, and profile history",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-partners"
                ],
                "summary": "Get partner detail (with stats and history)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner detail info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid partner ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/partners/{id}/logo": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Accepts multipart/form-data with logo file and saves it to S3 logos bucket",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-partners"
                ],
                "summary": "Upload partner logo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Logo file (image/*)",
                        "name": "logo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logo URL",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/partners/{id}/statistics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns detailed statistics for a specific partner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-partners"
                ],
                "summary": "Get partner statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/partners/{id}/unblock": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Unblocks partner (restores access)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-partners"
                ],
                "summary": "Unblock partner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner unblocked",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/queue": {
            "get": {
                "description": "Returns all tasks in image processing queue with optional status filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-image-processing"
                ],
                "summary": "Get processing queue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task status filter (uploaded, edited, processing, processed, completed, failed)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date filter (YYYY-MM-DD)",
                        "name": "date_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date filter (YYYY-MM-DD)",
                        "name": "date_to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks in processing queue",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to get queue",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Adds new image processing task to queue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-image-processing"
                ],
                "summary": "Add task to queue",
                "parameters": [
                    {
                        "description": "Task parameters including coupon ID, image path, processing params, user email and priority",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/image.AddToQueueRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Task added to queue successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation error - failed to parse request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to add task to queue",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/queue/{id}": {
            "get": {
                "description": "Returns detailed information about image processing task",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-image-processing"
                ],
                "summary": "Get task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task information with status details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid task ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to get task",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes task from processing queue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-image-processing"
                ],
                "summary": "Delete task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid task ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to delete task",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/queue/{id}/complete": {
            "put": {
                "description": "Marks task as successfully completed",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-image-processing"
                ],
                "summary": "Complete task processing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task completed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid task ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to complete processing",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/queue/{id}/fail": {
            "put": {
                "description": "Marks task as failed with error reason",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-image-processing"
                ],
                "summary": "Fail task processing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Error message details",
                        "name": "error",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/image.FailProcessingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task marked as failed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid task ID format or failed to parse request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to mark task as failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/queue/{id}/retry": {
            "put": {
                "description": "Returns failed task back to processing queue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-image-processing"
                ],
                "summary": "Retry task processing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task returned to queue successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid task ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to retry task",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/queue/{id}/start": {
            "put": {
                "description": "Marks task as being processed",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-image-processing"
                ],
                "summary": "Start task processing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processing started successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid task ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to start processing",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/statistics": {
            "get": {
                "description": "Returns image processing statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-image-processing"
                ],
                "summary": "Get processing statistics",
                "responses": {
                    "200": {
                        "description": "Processing statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to get statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/statistics/partners": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns detailed statistics for all partners",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-statistics"
                ],
                "summary": "Get partners statistics",
                "responses": {
                    "200": {
                        "description": "Partners statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/statistics/system": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns detailed system statistics: performance, load, queue status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-statistics"
                ],
                "summary": "Get system statistics",
                "responses": {
                    "200": {
                        "description": "System statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/stats/coupons-by-size": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns count of coupons by their sizes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-stats"
                ],
                "summary": "Get coupons statistics by size",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Partner ID (optional)",
                        "name": "partner_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupons by size statistics",
                        "schema": {
                            "$ref": "#/definitions/stats.CouponsBySizeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid partner ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting coupons by size statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/stats/coupons-by-status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns count of coupons in each status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-stats"
                ],
                "summary": "Get coupons statistics by status",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Partner ID (optional)",
                        "name": "partner_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupons by status statistics",
                        "schema": {
                            "$ref": "#/definitions/stats.CouponsByStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid partner ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting coupons by status statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/stats/coupons-by-style": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns count of coupons by their processing styles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-stats"
                ],
                "summary": "Get coupons statistics by style",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Partner ID (optional)",
                        "name": "partner_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupons by style statistics",
                        "schema": {
                            "$ref": "#/definitions/stats.CouponsByStyleResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid partner ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting coupons by style statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/stats/general": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns general system statistics including coupon count, partner count, and activation percentage",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-stats"
                ],
                "summary": "Get general statistics",
                "responses": {
                    "200": {
                        "description": "General statistics data",
                        "schema": {
                            "$ref": "#/definitions/stats.GeneralStatsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting general statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/stats/partners": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns statistics for all partners in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-stats"
                ],
                "summary": "Get all partners statistics",
                "responses": {
                    "200": {
                        "description": "Partners statistics data",
                        "schema": {
                            "$ref": "#/definitions/stats.PartnerListStatsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting all partners statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/stats/partners/{partner_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns detailed statistics for a specific partner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-stats"
                ],
                "summary": "Get partner statistics",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Partner ID",
                        "name": "partner_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner statistics data",
                        "schema": {
                            "$ref": "#/definitions/stats.PartnerStatsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid partner ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting partner statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/stats/realtime": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Provides real-time statistics updates via WebSocket connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-stats"
                ],
                "summary": "Get real-time statistics via WebSocket",
                "responses": {
                    "101": {
                        "description": "Switching to WebSocket protocol",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "WebSocket upgrade failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/stats/system-health": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns system health information, service status and performance metrics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-stats"
                ],
                "summary": "Get system health status",
                "responses": {
                    "200": {
                        "description": "System health data",
                        "schema": {
                            "$ref": "#/definitions/stats.SystemHealthResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while checking system health",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/stats/time-series": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns data for building time-based charts and graphs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-stats"
                ],
                "summary": "Get time series statistics",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Partner ID (optional)",
                        "name": "partner_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "date_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "date_to",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "day",
                            "week",
                            "month",
                            "year"
                        ],
                        "type": "string",
                        "description": "Grouping period",
                        "name": "period",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Time series statistics data",
                        "schema": {
                            "$ref": "#/definitions/stats.TimeSeriesStatsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting time series statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/stats/top-partners": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns list of top partners by activity metrics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-stats"
                ],
                "summary": "Get top partners by activity",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Number of partners to return (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Top partners statistics",
                        "schema": {
                            "$ref": "#/definitions/stats.TopPartnersResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid limit parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting top partners",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/support/chats": {
            "get": {
                "description": "Lists all support chats with details (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin",
                    "support"
                ],
                "summary": "List support chats",
                "responses": {
                    "200": {
                        "description": "List of support chats",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/support/chats/{id}": {
            "delete": {
                "description": "Deletes a support chat by ID (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin",
                    "support"
                ],
                "summary": "Admin delete support chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the chat",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete success confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/support/partners/{id}/block": {
            "patch": {
                "description": "Blocks a partner by ID (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin",
                    "support"
                ],
                "summary": "Admin block partner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the partner",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block success confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/support/partners/{id}/unblock": {
            "patch": {
                "description": "Unblocks a partner by ID (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin",
                    "support"
                ],
                "summary": "Admin unblock partner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the partner",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unblock success confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/branding": {
            "get": {
                "description": "Returns branding data (logo, contacts, links) for the current domain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get branding information",
                "responses": {
                    "200": {
                        "description": "Branding data including logo, contacts, and links",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving branding data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/config/recaptcha": {
            "get": {
                "description": "Returns the public reCAPTCHA v3 site key for frontend",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get reCAPTCHA site key",
                "responses": {
                    "200": {
                        "description": "reCAPTCHA site key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving reCAPTCHA site key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/coupons/purchase": {
            "post": {
                "description": "Purchases a new coupon with card payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Purchase coupon",
                "parameters": [
                    {
                        "description": "Purchase parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/public.PurchaseCouponRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Coupon purchased successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request: invalid purchase parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Purchase not allowed for this partner",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error during coupon purchase",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/coupons/{code}": {
            "get": {
                "description": "Returns coupon information for validation purposes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get coupon information by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon code (12 digits)",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon information including status, partner, and creation date",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid coupon code format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving coupon",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/coupons/{code}/activate": {
            "post": {
                "description": "Activates a coupon and prepares it for image upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Activate coupon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon activated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Coupon already used",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error during coupon activation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/images/upload": {
            "post": {
                "description": "Uploads user's image for mosaic pattern creation",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Upload image for processing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of activated coupon (UUID)",
                        "name": "coupon_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Coupon code (12 digits) - alternative to coupon_id",
                        "name": "coupon_code",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image file (JPG, PNG)",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Image uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request: missing required fields or invalid data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error during image upload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/images/{id}/download": {
            "get": {
                "description": "Downloads the generated mosaic schema",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Download schema",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schema file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid image ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Schema not ready",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error during schema download",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/images/{id}/edit": {
            "post": {
                "description": "Applies cropping, rotation and scaling to the image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Edit image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Editing parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.EditImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image edited successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request: invalid editing parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error during image editing",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/images/{id}/generate-schema": {
            "post": {
                "description": "Creates final mosaic schema from processed image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Generate mosaic schema",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schema generation parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GenerateSchemaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schema generation started",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request: invalid schema generation parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error during schema generation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/images/{id}/preview": {
            "get": {
                "description": "Returns the preview of the processed image",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Get image preview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image preview with URL and dimensions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving image preview",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/images/{id}/process": {
            "post": {
                "description": "Applies selected processing style to the image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Process image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Processing parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ProcessImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image processing started",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request: invalid processing parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error during image processing",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/images/{id}/send-email": {
            "post": {
                "description": "Sends the generated mosaic schema to the specified email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Send schema to email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Email address for sending",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/public.SendEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schema sent successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request: invalid email or request format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error during email sending",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/images/{id}/status": {
            "get": {
                "description": "Returns the current processing status of the image",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Get processing status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processing status including current step and progress",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving processing status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/partners/{domain}/info": {
            "get": {
                "description": "Returns branding and contact information of a partner for White Label implementation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get partner information by domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner's domain name",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner information including branding and contact details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found for the specified domain",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving partner information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/sizes": {
            "get": {
                "description": "Returns list of available mosaic sizes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get available sizes",
                "responses": {
                    "200": {
                        "description": "Available sizes with dimensions and prices",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving available sizes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/styles": {
            "get": {
                "description": "Returns list of available processing styles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get available styles",
                "responses": {
                    "200": {
                        "description": "Available styles with descriptions and examples",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving available styles",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/change-email": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Changes the email of the current admin (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change admin email",
                "parameters": [
                    {
                        "description": "Password and new email",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ChangeEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email changed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid password",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Admins only",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Email already in use",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/change-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Changes the password of the current user (admin or partner)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "description": "Current and new password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid current password",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "description": "Sends an email with a password reset link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Forgot password request",
                "parameters": [
                    {
                        "description": "Verification data and captcha",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email sent",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login as admin or partner using credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Universal login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Account blocked",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh access and refresh tokens using a refresh token (admin or partner)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh tokens",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "refresh",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New tokens",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "Resets password using a token from email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "description": "Reset token and new password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid or expired token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chat/messages": {
            "get": {
                "description": "Retrieves messages between the authenticated user and a target user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get messages between users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the target user",
                        "name": "targetUserId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of messages",
                        "schema": {
                            "$ref": "#/definitions/chat.MessagesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid targetUserId parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Sends a new message to a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Send a message to a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the target user",
                        "name": "targetId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Content of the message",
                        "name": "content",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sent message details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body or target ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chat/messages/{id}": {
            "delete": {
                "description": "Deletes a message by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Delete a message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete success confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the content of a message by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Update a message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New content for the message",
                        "name": "content",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update success confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body or ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chat/messages/{id}/attachments": {
            "get": {
                "description": "Streams an attachment file for a specific message by ID",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Stream an attachment by message ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Uploads an attachment file to a specific message",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Upload an attachment to a message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Attachment file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upload success confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID or file",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chat/support-unread-count": {
            "get": {
                "description": "Retrieves the count of unread support messages for admins",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get support unread count",
                "responses": {
                    "200": {
                        "description": "Support unread count details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden (admins only)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chat/unread-by-sender": {
            "get": {
                "description": "Retrieves unread message count grouped by sender for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get unread count by sender",
                "responses": {
                    "200": {
                        "description": "Unread count by sender",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chat/unread-count": {
            "get": {
                "description": "Retrieves the count of unread messages for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get unread message count",
                "responses": {
                    "200": {
                        "description": "Unread count details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chat/users": {
            "get": {
                "description": "Retrieves a list of users filtered by role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get users by role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role of the users",
                        "name": "role",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "$ref": "#/definitions/chat.UsersResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid role parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons": {
            "get": {
                "description": "Returns list of coupons with filtering capabilities by code, status, size, style and partner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get coupons list with filtering",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon code for search",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon status (new, used)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon style",
                        "name": "style",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "partner_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of coupons",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/batch/delete/confirm": {
            "post": {
                "description": "Deletes coupons after confirmation with key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Confirmed batch delete",
                "parameters": [
                    {
                        "description": "Delete confirmation with key",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/coupon.BatchDeleteConfirmRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete result",
                        "schema": {
                            "$ref": "#/definitions/coupon.BatchDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/batch/delete/preview": {
            "post": {
                "description": "Shows information about coupons before deletion and generates confirmation key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Batch delete preview",
                "parameters": [
                    {
                        "description": "List of coupon IDs for deletion",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/coupon.BatchDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete preview",
                        "schema": {
                            "$ref": "#/definitions/coupon.BatchDeletePreviewResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/batch/reset": {
            "post": {
                "description": "Resets multiple coupons to initial state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Batch reset coupons",
                "parameters": [
                    {
                        "description": "List of coupon IDs to reset",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/coupon.BatchResetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch reset result",
                        "schema": {
                            "$ref": "#/definitions/coupon.BatchResetResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/code/{code}": {
            "get": {
                "description": "Returns detailed coupon information by code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get coupon by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/code/{code}/validate": {
            "post": {
                "description": "Validates coupon existence and availability for activation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Validate coupon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon validation status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/export": {
            "get": {
                "description": "Exports coupons to text file with filtering options",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Export coupons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID for filtering",
                        "name": "partner_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon status for export",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Export format: codes (codes only) or full (full information)",
                        "name": "format",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Text file with coupons",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/export-advanced": {
            "get": {
                "description": "Exports coupons in various formats (TXT, CSV, XLSX) with customizable options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Advanced coupon export",
                "parameters": [
                    {
                        "description": "Export options",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/coupon.ExportOptionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Export file",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/paginated": {
            "get": {
                "description": "Returns paginated list of coupons with filtering capabilities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get coupons list with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default 20, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon code for search",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon status (new, used)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon style",
                        "name": "style",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "partner_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupons with pagination info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/partner/{partner_id}": {
            "get": {
                "description": "Returns all coupons for specific partner with filtering options",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get coupons by partner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "partner_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Coupon status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon style",
                        "name": "style",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner coupons",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid partner ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/statistics": {
            "get": {
                "description": "Returns coupon statistics with optional partner filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get coupon statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID for filtering",
                        "name": "partner_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/{id}": {
            "get": {
                "description": "Returns detailed coupon information by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get coupon by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid coupon ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/{id}/activate": {
            "put": {
                "description": "Activates coupon by changing status to 'used' and adding image links",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Activate coupon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image links",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/coupon.ActivateCouponRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon activated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid coupon ID or request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/{id}/download-materials": {
            "get": {
                "description": "Downloads archive with redeemed coupon materials (original, preview, schema)",
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Download coupon materials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ZIP archive with materials",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid coupon ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon not found or not used",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/{id}/purchase": {
            "put": {
                "description": "Marks coupon as purchased online with buyer's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Mark coupon as purchased",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Buyer's email",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/coupon.MarkAsPurchasedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon marked as purchased",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid coupon ID or request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/{id}/reset": {
            "put": {
                "description": "Resets coupon to initial state (status 'new')",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Reset coupon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon reset",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid coupon ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/{id}/send-schema": {
            "put": {
                "description": "Sends coupon schema to specified email address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Send schema to email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Email for sending",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/coupon.SendSchemaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schema sent",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid coupon ID or request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/partner/coupons": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of coupons for the current partner with filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partner-coupons"
                ],
                "summary": "Get partner's coupons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon code for search",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon status (new, used, completed)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coupon style",
                        "name": "style",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Creation date from (RFC3339 format)",
                        "name": "created_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Creation date to (RFC3339 format)",
                        "name": "created_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Usage date from (RFC3339 format)",
                        "name": "used_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Usage date to (RFC3339 format)",
                        "name": "used_to",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "created_at",
                            "updated_at",
                            "used_at"
                        ],
                        "type": "string",
                        "default": "created_at",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort order",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 50,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of partner coupons with pagination info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized: JWT token is missing or invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden: User does not have partner role",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving coupons",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/partner/coupons/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exports partner's coupons with status \"new\" in .txt or .csv format",
                "produces": [
                    "text/plain",
                    "text/csv"
                ],
                "tags": [
                    "partner-coupons"
                ],
                "summary": "Export partner's coupons",
                "parameters": [
                    {
                        "enum": [
                            "txt",
                            "csv"
                        ],
                        "type": "string",
                        "default": "csv",
                        "description": "File format (txt or csv)",
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "new",
                        "description": "Coupon status to export (new, used, completed, or 'all' for all statuses)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File with coupons as attachment",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request: Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized: JWT token is missing or invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden: User does not have partner role",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error during export process",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/partner/coupons/{id}/download-materials": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Downloads archive with materials of a redeemed partner's coupon (original, preview, scheme)",
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "partner-coupons"
                ],
                "summary": "Download coupon materials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ZIP archive with materials as attachment",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request: Invalid coupon ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized: JWT token is missing or invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden: Coupon does not belong to partner",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon not found or materials not available",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error during download process",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/partner/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns data for the partner's main dashboard page including coupon statistics and recent activations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partner-dashboard"
                ],
                "summary": "Get partner dashboard data",
                "responses": {
                    "200": {
                        "description": "Dashboard data with coupons and recent activations",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized: JWT token is missing or invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden: User does not have partner role",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving dashboard data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/partner/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns information about the current partner's profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partner-profile"
                ],
                "summary": "Get partner profile",
                "responses": {
                    "200": {
                        "description": "Partner profile data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized: JWT token is missing or invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden: User does not have partner role",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Partner not found in the database",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Attempts to update partner profile (read-only in partner panel, available only to administrator)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partner-profile"
                ],
                "summary": "Update partner profile",
                "responses": {
                    "403": {
                        "description": "Forbidden: Profile is read-only, contact administrator",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/partner/statistics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns general statistics for the current partner including coupon counts by status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partner-statistics"
                ],
                "summary": "Get partner statistics",
                "responses": {
                    "200": {
                        "description": "Partner statistics with coupon counts",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized: JWT token is missing or invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden: User does not have partner role",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/partner/statistics/comparison": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns aggregated comparison with other partners - top partners by used and purchased coupons",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partner-statistics"
                ],
                "summary": "Get comparison statistics with other partners",
                "responses": {
                    "200": {
                        "description": "Comparison statistics with other partners",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized: JWT token is missing or invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden: User does not have partner role",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error when retrieving comparison statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/partner/stats/my": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns statistics for the current authenticated partner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partner-stats"
                ],
                "summary": "Get my partner statistics",
                "responses": {
                    "200": {
                        "description": "Partner statistics data",
                        "schema": {
                            "$ref": "#/definitions/stats.PartnerStatsResponse"
                        }
                    },
                    "401": {
                        "description": "Partner not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting partner statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/partner/stats/my/coupons-by-status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns coupons statistics by status for the current authenticated partner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partner-stats"
                ],
                "summary": "Get my partner coupons statistics by status",
                "responses": {
                    "200": {
                        "description": "Partner coupons by status statistics",
                        "schema": {
                            "$ref": "#/definitions/stats.CouponsByStatusResponse"
                        }
                    },
                    "401": {
                        "description": "Partner not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting coupons by status statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/partner/stats/my/time-series": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns time series statistics for the current authenticated partner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partner-stats"
                ],
                "summary": "Get my partner time series statistics",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "date_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "date_to",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "day",
                            "week",
                            "month"
                        ],
                        "type": "string",
                        "description": "Grouping period",
                        "name": "period",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner time series statistics",
                        "schema": {
                            "$ref": "#/definitions/stats.TimeSeriesStatsResponse"
                        }
                    },
                    "401": {
                        "description": "Partner not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting time series statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/payment/notification": {
            "post": {
                "description": "Handle payment webhook notification from payment gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Process payment notification",
                "parameters": [
                    {
                        "description": "Notification data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payment.PaymentNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification processed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid notification data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to process notification",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/payment/options": {
            "get": {
                "description": "Retrieve available payment methods and configurations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Get available payment options",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to get payment options",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/payment/orders/{orderNumber}/status": {
            "get": {
                "description": "Retrieve payment order status by order number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Get order status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order number",
                        "name": "orderNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payment.OrderStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Order number is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to get order status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/payment/purchase": {
            "post": {
                "description": "Process coupon purchase and create payment order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Purchase coupon",
                "parameters": [
                    {
                        "description": "Purchase request data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payment.PurchaseCouponRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payment.PurchaseCouponResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to create order",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/payment/return": {
            "get": {
                "description": "Handle payment return callback from payment gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Process payment return",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order number",
                        "name": "orderNumber",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to success page"
                    },
                    "400": {
                        "description": "Order number is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to process payment return",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/payment/test-integration": {
            "get": {
                "description": "Test integration with Alfa Bank API using current configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Test Alfa Bank integration",
                "responses": {
                    "200": {
                        "description": "Integration test results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Integration test failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/public/images/{id}/edit": {
            "put": {
                "description": "Applies cropping, rotation and scaling to uploaded image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-images"
                ],
                "summary": "Edit image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Edit parameters including crop, rotation and scale settings",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/image.ImageEditParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image successfully edited",
                        "schema": {
                            "$ref": "#/definitions/types.ImageEditResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid image ID format or parse error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to edit image or get image status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/images/{id}/generate-schema": {
            "post": {
                "description": "Creates final diamond mosaic schema with instructions and color map",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-images"
                ],
                "summary": "Generate mosaic schema",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schema generation confirmation - must be true to proceed",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GenerateSchemaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schema generation started successfully",
                        "schema": {
                            "$ref": "#/definitions/types.GenerateSchemaResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid image ID format, parse error, or schema request not confirmed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to generate schema",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/images/{id}/process": {
            "put": {
                "description": "Applies selected processing styles to image, including AI processing through Stable Diffusion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-images"
                ],
                "summary": "Process image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Processing parameters including style, AI settings, lighting, contrast, brightness, and saturation",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ProcessImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image processing started successfully",
                        "schema": {
                            "$ref": "#/definitions/types.ProcessImageResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid image ID format or parse error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to get image status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/images/{id}/status": {
            "get": {
                "description": "Returns current image processing status and file links",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-images"
                ],
                "summary": "Get image processing status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image status retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/types.ImageStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid image ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to get image status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/schemas/{schema_uuid}/download": {
            "get": {
                "description": "Allows user to download ZIP archive with mosaic schema files",
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "public-images"
                ],
                "summary": "Download schema archive (public)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schema UUID (UUID format)",
                        "name": "schema_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ZIP archive with schema files",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Validation error - schema UUID required, invalid UUID format, or schema not ready for download",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Schema not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to generate download URL",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/support/messages": {
            "get": {
                "description": "Retrieves messages for a specific support chat by chat ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "support"
                ],
                "summary": "Get support chat messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the chat",
                        "name": "chat_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of support messages",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid chat ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Sends a new message in a specific support chat",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "support"
                ],
                "summary": "Send a message in support chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the chat",
                        "name": "chat_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Content of the message",
                        "name": "content",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sent message details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body or chat ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/public/support/messages/{id}/attachments": {
            "get": {
                "description": "Streams an attachment file for a specific support message by ID (uses access token)",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "support"
                ],
                "summary": "Stream an attachment of a support message (public users)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the support message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Uploads an attachment file to a specific support message (uses access token)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "support"
                ],
                "summary": "Upload an attachment to a support message (public users)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the support message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Attachment file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upload success confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID or file",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/public/support/start": {
            "post": {
                "description": "Creates a new support chat and returns a guest token for access",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "support"
                ],
                "summary": "Start a support chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title of the support chat",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chat details including guest token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/public/upload": {
            "post": {
                "description": "Uploads user image for diamond mosaic creation",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-images"
                ],
                "summary": "Upload image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "12-character coupon code",
                        "name": "coupon_code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file (JPG, PNG, max 10MB)",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image successfully uploaded",
                        "schema": {
                            "$ref": "#/definitions/types.ImageUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error - invalid coupon code format or coupon not activated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to find coupon, get uploaded image, or upload image",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/support/messages/{id}": {
            "delete": {
                "description": "Deletes a specific support message by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "support"
                ],
                "summary": "Delete a support message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete success confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the content of a specific support message",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "support"
                ],
                "summary": "Update a support message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New content for the message",
                        "name": "content",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update success confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body or ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/support/messages/{id}/attachments": {
            "get": {
                "description": "Streams an attachment file for a specific support message by ID (requires JWT authentication)",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "support"
                ],
                "summary": "Stream an attachment of a support message (authenticated users)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the support message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Uploads an attachment file to a specific support message (requires JWT authentication)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "support"
                ],
                "summary": "Upload an attachment to a support message (authenticated users)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the support message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Attachment file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upload success confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID or file",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.CreateAdminRequest": {
            "type": "object",
            "required": [
                "email",
                "login",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "admin.UpdateAdminEmailRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "admin.UpdateAdminPasswordRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.ChangeEmailRequest": {
            "type": "object",
            "required": [
                "new_email",
                "password"
            ],
            "properties": {
                "new_email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "auth.ForgotPasswordRequest": {
            "type": "object",
            "required": [
                "captcha",
                "email",
                "login"
            ],
            "properties": {
                "captcha": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "token"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "chat.MessageResponse": {
            "type": "object",
            "properties": {
                "attachment_url": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "edited": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "read": {
                    "type": "boolean"
                },
                "sender_id": {
                    "type": "string"
                },
                "target_id": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "chat.MessagesResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chat.MessageResponse"
                    }
                }
            }
        },
        "chat.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_blocked_in_chat": {
                    "type": "boolean"
                },
                "is_online": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partner_code": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "chat.UsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chat.User"
                    }
                }
            }
        },
        "coupon.ActivateCouponRequest": {
            "type": "object",
            "properties": {
                "zip_url": {
                    "type": "string"
                }
            }
        },
        "coupon.BatchDeleteConfirmRequest": {
            "type": "object",
            "required": [
                "confirmation_key",
                "coupon_ids"
            ],
            "properties": {
                "admin_comment": {
                    "type": "string"
                },
                "confirmation_key": {
                    "type": "string"
                },
                "coupon_ids": {
                    "type": "array",
                    "maxItems": 1000,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "coupon.BatchDeletePreviewResponse": {
            "type": "object",
            "properties": {
                "confirmation_key": {
                    "type": "string"
                },
                "coupons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/coupon.CouponDeletePreview"
                    }
                },
                "expires_at": {
                    "type": "string"
                },
                "new_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "used_count": {
                    "type": "integer"
                }
            }
        },
        "coupon.BatchDeleteRequest": {
            "type": "object",
            "required": [
                "coupon_ids"
            ],
            "properties": {
                "coupon_ids": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "coupon.BatchDeleteResponse": {
            "type": "object",
            "properties": {
                "deleted": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deleted_count": {
                    "type": "integer"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "failed": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "failed_count": {
                    "type": "integer"
                }
            }
        },
        "coupon.BatchResetRequest": {
            "type": "object",
            "required": [
                "coupon_ids"
            ],
            "properties": {
                "coupon_ids": {
                    "type": "array",
                    "maxItems": 1000,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "coupon.BatchResetResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "failed": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "failed_count": {
                    "type": "integer"
                },
                "success": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success_count": {
                    "type": "integer"
                }
            }
        },
        "coupon.CouponDeletePreview": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "partner_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "used_at": {
                    "type": "string"
                }
            }
        },
        "coupon.CouponSize": {
            "type": "string",
            "enum": [
                "21x30",
                "30x40",
                "40x40",
                "40x50",
                "40x60",
                "50x70"
            ],
            "x-enum-varnames": [
                "Size21x30",
                "Size30x40",
                "Size40x40",
                "Size40x50",
                "Size40x60",
                "Size50x70"
            ]
        },
        "coupon.CouponStyle": {
            "type": "string",
            "enum": [
                "grayscale",
                "skin_tones",
                "pop_art",
                "max_colors"
            ],
            "x-enum-varnames": [
                "StyleGrayscale",
                "StyleSkinTones",
                "StylePopArt",
                "StyleMaxColors"
            ]
        },
        "coupon.CreateCouponRequest": {
            "type": "object",
            "required": [
                "count",
                "partner_id",
                "size",
                "style"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "partner_id": {
                    "type": "string"
                },
                "size": {
                    "enum": [
                        "21x30",
                        "30x40",
                        "40x40",
                        "40x50",
                        "40x60",
                        "50x70"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/coupon.CouponSize"
                        }
                    ]
                },
                "style": {
                    "enum": [
                        "grayscale",
                        "skin_tones",
                        "pop_art",
                        "max_colors"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/coupon.CouponStyle"
                        }
                    ]
                }
            }
        },
        "coupon.ExportFormatType": {
            "type": "string",
            "enum": [
                "codes",
                "basic",
                "full",
                "admin",
                "partner",
                "activity"
            ],
            "x-enum-comments": {
                "ExportFormatActivity": "с активностью пользователей",
                "ExportFormatAdmin": "админ формат (новые купоны)",
                "ExportFormatBasic": "базовая информация",
                "ExportFormatCodes": "только коды",
                "ExportFormatFull": "полная информация (все купоны)",
                "ExportFormatPartner": "с информацией о партнере"
            },
            "x-enum-descriptions": [
                "только коды",
                "базовая информация",
                "полная информация (все купоны)",
                "админ формат (новые купоны)",
                "с информацией о партнере",
                "с активностью пользователей"
            ],
            "x-enum-varnames": [
                "ExportFormatCodes",
                "ExportFormatBasic",
                "ExportFormatFull",
                "ExportFormatAdmin",
                "ExportFormatPartner",
                "ExportFormatActivity"
            ]
        },
        "coupon.ExportOptionsRequest": {
            "type": "object",
            "required": [
                "format"
            ],
            "properties": {
                "activated_from": {
                    "type": "string"
                },
                "activated_to": {
                    "type": "string"
                },
                "created_from": {
                    "description": "Фильтры по датам",
                    "type": "string"
                },
                "created_to": {
                    "type": "string"
                },
                "delimiter": {
                    "description": "для CSV",
                    "type": "string"
                },
                "file_format": {
                    "description": "Настройки файла",
                    "type": "string",
                    "enum": [
                        "txt",
                        "csv",
                        "xlsx"
                    ]
                },
                "format": {
                    "enum": [
                        "codes",
                        "basic",
                        "full",
                        "admin",
                        "partner",
                        "activity"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/coupon.ExportFormatType"
                        }
                    ]
                },
                "include_header": {
                    "description": "включать заголовки",
                    "type": "boolean"
                },
                "partner_codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "partner_id": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "style": {
                    "type": "string"
                }
            }
        },
        "coupon.MarkAsPurchasedRequest": {
            "type": "object",
            "required": [
                "purchase_email"
            ],
            "properties": {
                "purchase_email": {
                    "type": "string"
                }
            }
        },
        "coupon.SendSchemaRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "image.AddToQueueRequest": {
            "type": "object",
            "required": [
                "coupon_id",
                "original_image_path",
                "processing_params",
                "user_email"
            ],
            "properties": {
                "coupon_id": {
                    "type": "string"
                },
                "original_image_path": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer",
                    "maximum": 10,
                    "minimum": 1
                },
                "processing_params": {
                    "$ref": "#/definitions/image.ProcessingParams"
                },
                "user_email": {
                    "type": "string"
                }
            }
        },
        "image.FailProcessingRequest": {
            "type": "object",
            "required": [
                "error_message"
            ],
            "properties": {
                "error_message": {
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                }
            }
        },
        "image.ImageEditParams": {
            "type": "object",
            "properties": {
                "crop_height": {
                    "type": "integer",
                    "minimum": 1
                },
                "crop_width": {
                    "type": "integer",
                    "minimum": 1
                },
                "crop_x": {
                    "type": "integer",
                    "minimum": 0
                },
                "crop_y": {
                    "type": "integer",
                    "minimum": 0
                },
                "rotation": {
                    "type": "integer",
                    "enum": [
                        0,
                        90,
                        180,
                        270
                    ]
                },
                "scale": {
                    "type": "number",
                    "maximum": 5,
                    "minimum": 0.1
                }
            }
        },
        "image.ProcessingParams": {
            "type": "object",
            "required": [
                "style"
            ],
            "properties": {
                "brightness": {
                    "type": "number",
                    "maximum": 100,
                    "minimum": -100
                },
                "contrast": {
                    "type": "string",
                    "enum": [
                        "low",
                        "high"
                    ]
                },
                "lighting": {
                    "type": "string",
                    "enum": [
                        "sun",
                        "moon",
                        "venus"
                    ]
                },
                "saturation": {
                    "type": "number",
                    "maximum": 100,
                    "minimum": -100
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "style": {
                    "type": "string",
                    "enum": [
                        "grayscale",
                        "skin_tones",
                        "pop_art",
                        "max_colors"
                    ]
                },
                "use_ai": {
                    "type": "boolean"
                }
            }
        },
        "partner.CreatePartnerRequest": {
            "type": "object",
            "required": [
                "address",
                "brand_name",
                "domain",
                "email",
                "login",
                "logo_url",
                "ozon_link",
                "password",
                "phone",
                "telegram",
                "telegram_link",
                "whatsapp",
                "whatsapp_link",
                "wildberries_link"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "allow_purchases": {
                    "type": "boolean"
                },
                "allow_sales": {
                    "type": "boolean"
                },
                "brand_colors": {
                    "type": "array",
                    "maxItems": 3,
                    "items": {
                        "type": "string"
                    }
                },
                "brand_name": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "logo_url": {
                    "type": "string"
                },
                "ozon_link": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "blocked"
                    ]
                },
                "telegram": {
                    "type": "string"
                },
                "telegram_link": {
                    "type": "string"
                },
                "whatsapp": {
                    "type": "string"
                },
                "whatsapp_link": {
                    "type": "string"
                },
                "wildberries_link": {
                    "type": "string"
                }
            }
        },
        "payment.OrderStatusResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "coupon_code": {
                    "description": "Код купона после успешной оплаты",
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "style": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "payment.PaymentNotificationRequest": {
            "type": "object",
            "properties": {
                "actionCode": {
                    "description": "Опционально для тестовой среды",
                    "type": "integer"
                },
                "actionCodeDescription": {
                    "description": "Опционально для тестовой среды",
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "checksum": {
                    "description": "Дополнительные поля для валидации",
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "date": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "orderDescription": {
                    "type": "string"
                },
                "orderId": {
                    "description": "Опционально для тестовой среды",
                    "type": "string"
                },
                "orderNumber": {
                    "type": "string"
                },
                "orderStatus": {
                    "description": "Опционально для тестовой среды",
                    "type": "integer"
                }
            }
        },
        "payment.PurchaseCouponRequest": {
            "type": "object",
            "required": [
                "email",
                "return_url",
                "size",
                "style"
            ],
            "properties": {
                "domain": {
                    "description": "Домен партнера для White Label",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fail_url": {
                    "type": "string"
                },
                "language": {
                    "type": "string",
                    "enum": [
                        "ru",
                        "en",
                        "es"
                    ]
                },
                "return_url": {
                    "type": "string"
                },
                "size": {
                    "type": "string",
                    "enum": [
                        "21x30",
                        "30x40",
                        "40x40",
                        "40x50",
                        "40x60",
                        "50x70"
                    ]
                },
                "style": {
                    "type": "string",
                    "enum": [
                        "grayscale",
                        "skin_tone",
                        "pop_art",
                        "max_colors"
                    ]
                }
            }
        },
        "payment.PurchaseCouponResponse": {
            "type": "object",
            "properties": {
                "amont": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "payment_url": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "public.PurchaseCouponRequest": {
            "type": "object",
            "required": [
                "amount",
                "email",
                "payment_token",
                "size",
                "style"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "payment_token": {
                    "type": "string"
                },
                "size": {
                    "type": "string",
                    "enum": [
                        "21x30",
                        "30x40",
                        "40x40",
                        "40x50",
                        "40x60",
                        "50x70"
                    ]
                },
                "style": {
                    "type": "string",
                    "enum": [
                        "grayscale",
                        "skin_tones",
                        "pop_art",
                        "max_colors"
                    ]
                }
            }
        },
        "public.SendEmailRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "stats.CouponsBySizeResponse": {
            "type": "object",
            "properties": {
                "size_21x30": {
                    "type": "integer"
                },
                "size_30x40": {
                    "type": "integer"
                },
                "size_40x40": {
                    "type": "integer"
                },
                "size_40x50": {
                    "type": "integer"
                },
                "size_40x60": {
                    "type": "integer"
                },
                "size_50x70": {
                    "type": "integer"
                }
            }
        },
        "stats.CouponsByStatusResponse": {
            "type": "object",
            "properties": {
                "activated": {
                    "type": "integer"
                },
                "completed": {
                    "type": "integer"
                },
                "new": {
                    "type": "integer"
                },
                "used": {
                    "type": "integer"
                }
            }
        },
        "stats.CouponsByStyleResponse": {
            "type": "object",
            "properties": {
                "grayscale": {
                    "type": "integer"
                },
                "max_colors": {
                    "type": "integer"
                },
                "pop_art": {
                    "type": "integer"
                },
                "skin_tones": {
                    "type": "integer"
                }
            }
        },
        "stats.GeneralStatsResponse": {
            "type": "object",
            "properties": {
                "activation_rate": {
                    "type": "number"
                },
                "active_partners_count": {
                    "type": "integer"
                },
                "last_updated": {
                    "type": "string"
                },
                "total_coupons_activated": {
                    "type": "integer"
                },
                "total_coupons_created": {
                    "type": "integer"
                },
                "total_partners_count": {
                    "type": "integer"
                }
            }
        },
        "stats.PartnerListStatsResponse": {
            "type": "object",
            "properties": {
                "partners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stats.PartnerStatsResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "stats.PartnerStatsResponse": {
            "type": "object",
            "properties": {
                "activated_coupons": {
                    "type": "integer"
                },
                "activation_rate": {
                    "type": "number"
                },
                "branded_site_purchases": {
                    "type": "integer"
                },
                "last_activity": {
                    "type": "string"
                },
                "partner_id": {
                    "type": "string"
                },
                "partner_name": {
                    "type": "string"
                },
                "total_coupons": {
                    "type": "integer"
                },
                "unused_coupons": {
                    "type": "integer"
                }
            }
        },
        "stats.SystemHealthResponse": {
            "type": "object",
            "properties": {
                "average_processing_time": {
                    "type": "number"
                },
                "database_status": {
                    "type": "string"
                },
                "error_rate": {
                    "type": "number"
                },
                "image_processing_queue": {
                    "type": "integer"
                },
                "last_updated": {
                    "type": "string"
                },
                "redis_status": {
                    "type": "string"
                },
                "status": {
                    "description": "healthy, warning, critical",
                    "type": "string"
                },
                "uptime": {
                    "type": "string"
                }
            }
        },
        "stats.TimeSeriesStatsPoint": {
            "type": "object",
            "properties": {
                "coupons_activated": {
                    "type": "integer"
                },
                "coupons_created": {
                    "type": "integer"
                },
                "coupons_purchased": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "new_partners_count": {
                    "type": "integer"
                }
            }
        },
        "stats.TimeSeriesStatsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stats.TimeSeriesStatsPoint"
                    }
                },
                "period": {
                    "type": "string"
                }
            }
        },
        "stats.TopPartnerItem": {
            "type": "object",
            "properties": {
                "activated_coupons": {
                    "type": "integer"
                },
                "activation_rate": {
                    "type": "number"
                },
                "partner_id": {
                    "type": "string"
                },
                "partner_name": {
                    "type": "string"
                },
                "total_coupons": {
                    "type": "integer"
                }
            }
        },
        "stats.TopPartnersResponse": {
            "type": "object",
            "properties": {
                "partners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stats.TopPartnerItem"
                    }
                }
            }
        },
        "types.EditImageRequest": {
            "type": "object",
            "properties": {
                "crop_height": {
                    "description": "Высота области кадрирования",
                    "type": "integer",
                    "minimum": 1
                },
                "crop_width": {
                    "description": "Ширина области кадрирования",
                    "type": "integer",
                    "minimum": 1
                },
                "crop_x": {
                    "description": "X координата начала кадрирования",
                    "type": "integer",
                    "minimum": 0
                },
                "crop_y": {
                    "description": "Y координата начала кадрирования",
                    "type": "integer",
                    "minimum": 0
                },
                "rotation": {
                    "description": "Поворот в градусах",
                    "type": "integer",
                    "enum": [
                        0,
                        90,
                        180,
                        270
                    ]
                },
                "scale": {
                    "description": "Масштаб",
                    "type": "number",
                    "maximum": 5,
                    "minimum": 0.1
                }
            }
        },
        "types.GenerateSchemaRequest": {
            "type": "object",
            "required": [
                "confirmed"
            ],
            "properties": {
                "confirmed": {
                    "description": "Подтверждение создания схемы",
                    "type": "boolean"
                }
            }
        },
        "types.GenerateSchemaResponse": {
            "type": "object",
            "properties": {
                "email_sent": {
                    "description": "Отправлена ли схема на email",
                    "type": "boolean"
                },
                "image_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "preview_url": {
                    "description": "URL финального превью",
                    "type": "string"
                },
                "zip_url": {
                    "description": "URL для скачивания архива с материалами",
                    "type": "string"
                }
            }
        },
        "types.ImageEditResponse": {
            "type": "object",
            "properties": {
                "image_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "next_step": {
                    "type": "string"
                },
                "preview_url": {
                    "description": "URL для просмотра отредактированного изображения",
                    "type": "string"
                }
            }
        },
        "types.ImageStatusResponse": {
            "type": "object",
            "properties": {
                "edited_url": {
                    "description": "URL отредактированного изображения",
                    "type": "string"
                },
                "error_message": {
                    "description": "Сообщение об ошибке (если есть)",
                    "type": "string"
                },
                "estimated_time": {
                    "description": "Оценочное время до завершения в секундах",
                    "type": "integer"
                },
                "image_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "original_url": {
                    "description": "URL оригинального изображения",
                    "type": "string"
                },
                "preview_url": {
                    "description": "URL превью",
                    "type": "string"
                },
                "processed_url": {
                    "description": "URL обработанного изображения",
                    "type": "string"
                },
                "progress": {
                    "description": "Прогресс в процентах (0-100)",
                    "type": "integer"
                },
                "status": {
                    "description": "queued, processing, completed, failed",
                    "type": "string"
                },
                "zip_url": {
                    "description": "URL архива с материалами (если готов)",
                    "type": "string"
                }
            }
        },
        "types.ImageUploadResponse": {
            "type": "object",
            "properties": {
                "coupon_size": {
                    "description": "Размер купона (определяется автоматически)",
                    "type": "string"
                },
                "coupon_style": {
                    "description": "Стиль купона (определяется автоматически)",
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "next_step": {
                    "type": "string"
                }
            }
        },
        "types.ProcessImageRequest": {
            "type": "object",
            "required": [
                "style"
            ],
            "properties": {
                "brightness": {
                    "description": "Яркость (-100 до 100)",
                    "type": "number",
                    "maximum": 100,
                    "minimum": -100
                },
                "contrast": {
                    "description": "Контрастность (2 варианта)",
                    "type": "string",
                    "enum": [
                        "low",
                        "high"
                    ]
                },
                "lighting": {
                    "description": "Освещение (солнце, луна, венера)",
                    "type": "string",
                    "enum": [
                        "sun",
                        "moon",
                        "venus"
                    ]
                },
                "saturation": {
                    "description": "Насыщенность (-100 до 100)",
                    "type": "number",
                    "maximum": 100,
                    "minimum": -100
                },
                "style": {
                    "description": "Стиль обработки",
                    "type": "string",
                    "enum": [
                        "grayscale",
                        "skin_tones",
                        "pop_art",
                        "max_colors"
                    ]
                },
                "use_ai": {
                    "description": "Использовать AI обработку через Stable Diffusion",
                    "type": "boolean"
                }
            }
        },
        "types.ProcessImageResponse": {
            "type": "object",
            "properties": {
                "image_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "next_step": {
                    "type": "string"
                },
                "original_url": {
                    "description": "URL оригинального изображения для сравнения",
                    "type": "string"
                },
                "preview_url": {
                    "description": "URL превью обработанного изображения",
                    "type": "string"
                }
            }
        }
    }
}
# Main nginx configuration template
# This is the base configuration that includes partner domains

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'partner="$http_x_partner_domain"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Allow any size file to be uploaded for MinIO
    client_max_body_size 0;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Allow special characters in headers
    ignore_invalid_headers off;
    
    # Disable buffering for MinIO
    proxy_buffering off;
    proxy_request_buffering off;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rss+xml
        application/x-javascript
        image/svg+xml
        image/x-icon;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn perip 20;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers (global)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Upstream definitions
    upstream backend {
        least_conn;
        server backend:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream public-site {
        server public-site:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream dashboards {
        server dashboards:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # MinIO S3 API upstream
    upstream minio_s3 {
        least_conn;
        server minio:9000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # MinIO Console upstream
    upstream minio_console {
        least_conn;
        server minio:9001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Default server block to handle unknown hosts
    server {
        listen 443 ssl default_server;
        server_name _;
        ssl_certificate {{DEFAULT_SSL_CERT}};
        ssl_certificate_key {{DEFAULT_SSL_KEY}};
        return 444;
    }

    # HTTP to HTTPS redirect for main domains and partner domains
    server {
        listen 80 default_server;
        server_name _;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }
        
        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Admin dashboard
    server {
        listen 443 ssl;
        http2 on;
        server_name adm.doyoupaint.com;

        ssl_certificate {{DEFAULT_SSL_CERT}};
        ssl_certificate_key {{DEFAULT_SSL_KEY}};
        
        # Additional security headers for admin
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google.com https://www.gstatic.com; frame-src 'self' https://www.google.com https://recaptcha.google.com; img-src 'self' data: https:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' blob: https://www.google.com https://www.google.com/recaptcha/ https://unpkg.com;" always;
        
        # Authentication rate limiting
        location ~ ^/api/(auth|admin) {
            limit_req zone=auth burst=5 nodelay;
            include /etc/nginx/snippets/api-proxy.conf;
        }
        
        # WebSocket endpoints for admin dashboard
        location /api/ws/ {
            include /etc/nginx/snippets/websocket-proxy.conf;
        }

        # API endpoints for admin dashboard
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            include /etc/nginx/snippets/api-proxy.conf;
        }

        # MinIO Console proxy
        location /minio/ {
            include /etc/nginx/snippets/minio-console-proxy.conf;
        }

        # Grafana proxy
        location /grafana/ {
            include /etc/nginx/snippets/grafana-proxy.conf;
        }

        # MinIO proxy for various buckets
        location /mosaic-logos/ {
            include /etc/nginx/snippets/minio-s3-proxy.conf;
            proxy_pass http://minio_s3/mosaic-logos/;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        location /mosaic-images/ {
            include /etc/nginx/snippets/minio-s3-proxy.conf;
            proxy_pass http://minio_s3/mosaic-images/;
        }

        location /chat-data/ {
            include /etc/nginx/snippets/minio-s3-proxy.conf;
            proxy_pass http://minio_s3/chat-data/;
        }

        location /preview-images/ {
            include /etc/nginx/snippets/minio-s3-proxy.conf;
            proxy_pass http://minio_s3/preview-images/;
            
            add_header Content-Type "image/png" always;
            add_header Cache-Control "public, max-age=31536000" always;
            
            if ($arg_download = "1") {
                add_header Content-Disposition "attachment; filename=mosaic-preview.png" always;
            }
        }

        # Admin dashboard frontend
        location / {
            proxy_pass http://dashboards;
            include /etc/nginx/snippets/basic-proxy.conf;
        }

        # Health check
        location = /health {
            access_log off;
            return 200 "OK - Admin Dashboard";
            add_header Content-Type text/plain;
        }
    }
    
    # Main public site
    server {
        listen 443 ssl;
        http2 on;
        server_name photo.doyoupaint.com;

        ssl_certificate {{DEFAULT_SSL_CERT}};
        ssl_certificate_key {{DEFAULT_SSL_KEY}};

        # Security headers for public site
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google.com https://www.gstatic.com; frame-src 'self' https://www.google.com https://recaptcha.google.com; img-src 'self' data: https:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' blob: https://www.google.com https://www.google.com/recaptcha/ https://unpkg.com;" always;

        # Static assets with caching
        location /assets/ {
            proxy_pass http://public-site;
            include /etc/nginx/snippets/basic-proxy.conf;
            include /etc/nginx/snippets/static-cache.conf;
        }

        # WebSocket endpoints
        location /api/ws/ {
            include /etc/nginx/snippets/websocket-proxy.conf;
        }

        # API endpoints
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            include /etc/nginx/snippets/api-proxy.conf;
        }

        # MinIO proxy for various buckets
        location /mosaic-logos/ {
            include /etc/nginx/snippets/minio-s3-proxy.conf;
            proxy_pass http://minio_s3/mosaic-logos/;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        location /mosaic-images/ {
            include /etc/nginx/snippets/minio-s3-proxy.conf;
            proxy_pass http://minio_s3/mosaic-images/;
        }

        location /chat-data/ {
            include /etc/nginx/snippets/minio-s3-proxy.conf;
            proxy_pass http://minio_s3/chat-data/;
        }

        location /preview-images/ {
            include /etc/nginx/snippets/minio-s3-proxy.conf;
            proxy_pass http://minio_s3/preview-images/;
            
            add_header Content-Type "image/png" always;
            add_header Cache-Control "public, max-age=31536000" always;
            
            if ($arg_download = "1") {
                add_header Content-Disposition "attachment; filename=mosaic-preview.png" always;
            }
        }

        # Main public site
        location / {
            proxy_pass http://public-site;
            include /etc/nginx/snippets/basic-proxy.conf;
        }

        # Health check
        location = /health {
            access_log off;
            return 200 "OK - Main Site";
            add_header Content-Type text/plain;
        }
    }

    # Include partner domain configurations
    include /etc/nginx/conf.d/partners/*.conf;
}
